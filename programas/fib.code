; Programa fibbonaci
    ENP L0
; Accion cambiar_de_linea
    JMP L1
L1:
; Codigo de cambiar_de_linea
; Escribir
    STC 13
    WRT 0
    STC 10
    WRT 0
; Fin de cambiar_de_linea
    CSF
; Accion dato
    JMP L2
; Accion pedir_dato
    JMP L3
L3:
; Codigo de pedir_dato
; Escribir
; Cadena "Escribe un numero: "
    STC 69
    WRT 0
    STC 115
    WRT 0
    STC 99
    WRT 0
    STC 114
    WRT 0
    STC 105
    WRT 0
    STC 98
    WRT 0
    STC 101
    WRT 0
    STC 32
    WRT 0
    STC 117
    WRT 0
    STC 110
    WRT 0
    STC 32
    WRT 0
    STC 110
    WRT 0
    STC 117
    WRT 0
    STC 109
    WRT 0
    STC 101
    WRT 0
    STC 114
    WRT 0
    STC 111
    WRT 0
    STC 58
    WRT 0
    STC 32
    WRT 0
; Leer
; Direccion de variable dato
    SRF 1 3
    DRF
    RD 1
; Fin de pedir_dato
    CSF
L2:
; Codigo de dato
; Direccion de dato
    SRF 0 3
    DRF
    STC 0
; Asignacion de dato
    ASG
; Direccion de correcto
    SRF 0 4
; Constante Falso
    STC 0
; Asignacion de correcto
    ASG
L4:
; MQ
; Acceso a variable correcto
    SRF 0 4
    DRF
    NGB
; Salir del bucle si la guarda se evalua a falso
    JMF L5
; Invocar accion pedir_dato
    OSF 4 0 L3
; Direccion de correcto
    SRF 0 4
; Acceso a variable dato
    SRF 0 3
    DRF
    DRF
    STC 0
    GT
; Asignacion de correcto
    ASG
; SI
; Acceso a variable correcto
    SRF 0 4
    DRF
    NGB
    JMF L6
; ENT
; Escribir
; Cadena "El numero debe ser postivo."
    STC 69
    WRT 0
    STC 108
    WRT 0
    STC 32
    WRT 0
    STC 110
    WRT 0
    STC 117
    WRT 0
    STC 109
    WRT 0
    STC 101
    WRT 0
    STC 114
    WRT 0
    STC 111
    WRT 0
    STC 32
    WRT 0
    STC 100
    WRT 0
    STC 101
    WRT 0
    STC 98
    WRT 0
    STC 101
    WRT 0
    STC 32
    WRT 0
    STC 115
    WRT 0
    STC 101
    WRT 0
    STC 114
    WRT 0
    STC 32
    WRT 0
    STC 112
    WRT 0
    STC 111
    WRT 0
    STC 115
    WRT 0
    STC 116
    WRT 0
    STC 105
    WRT 0
    STC 118
    WRT 0
    STC 111
    WRT 0
    STC 46
    WRT 0
; Invocar accion cambiar_de_linea
    OSF 4 1 L1
    JMP L7
L6:
; SI_NO
L7:
; Fin SI
; Fin de la iteracion. Saltar a la cabecera del bucle
    JMP L4
L5:
; Fin MQ
; Fin de dato
    CSF
; Accion fib
; Recuperar args fib
    SRF 0 4
    ASGI
    SRF 0 3
    ASGI
    JMP L8
L8:
; Codigo de fib
; SI
; Acceso a variable n
    SRF 0 3
    DRF
    STC 1
    GT
    JMF L9
; ENT
; Invocar accion fib
; Acceso a variable n
    SRF 0 3
    DRF
    STC 1
    SBT
; Acceso a variable r1
    SRF 0 5
    OSF 6 1 L8
; Invocar accion fib
; Acceso a variable n
    SRF 0 3
    DRF
    STC 2
    SBT
; Acceso a variable r2
    SRF 0 6
    OSF 6 1 L8
; Direccion de r
    SRF 0 4
    DRF
; Acceso a variable r1
    SRF 0 5
    DRF
; Acceso a variable r2
    SRF 0 6
    DRF
    PLUS
; Asignacion de r
    ASG
    JMP L10
L9:
; SI_NO
; Direccion de r
    SRF 0 4
    DRF
; Acceso a variable n
    SRF 0 3
    DRF
; Asignacion de r
    ASG
L10:
; Fin SI
; Fin de fib
    CSF
; Comienzo del programa fibbonaci
L0:
; Invocar accion dato
; Acceso a variable n
    SRF 0 3
    OSF 4 0 L2
; Invocar accion fib
; Acceso a variable n
    SRF 0 3
    DRF
; Acceso a variable r
    SRF 0 4
    OSF 4 0 L8
; Escribir
; Cadena "Fibbonaci("
    STC 70
    WRT 0
    STC 105
    WRT 0
    STC 98
    WRT 0
    STC 98
    WRT 0
    STC 111
    WRT 0
    STC 110
    WRT 0
    STC 97
    WRT 0
    STC 99
    WRT 0
    STC 105
    WRT 0
    STC 40
    WRT 0
; Acceso a variable n
    SRF 0 3
    DRF
    WRT 1
; Cadena ") es: "
    STC 41
    WRT 0
    STC 32
    WRT 0
    STC 101
    WRT 0
    STC 115
    WRT 0
    STC 58
    WRT 0
    STC 32
    WRT 0
; Acceso a variable r
    SRF 0 4
    DRF
    WRT 1
; Invocar accion cambiar_de_linea
    OSF 4 0 L1
; Fin de fibbonaci
    LVP
